include headmenu.pug
h1.heading.bigHead.muchShorterLetterSpace Insights
br
include insightsubmen.pug
input#data(type='hidden', value=items)
input#catData(type='hidden', value=catData)
script.
		//- let getData = document.getElementById('catData').value;
		//- let newDat = (JSON.parse(getData));
		//- let totalQuant = 0;
		//- console.log(newDat);

	class InsightProcessor {
		constructor(items) {
			this.items = items;
			this.categories = [
				'Soup',
				'Entree with Meat',
				'Entree without Meat',
				'Meat Only',
				'Beans',
				'Cracker',
				'Pasta',
				'Potato',
				'Rice',
				'Vegetable',
				'Breakfast Meal',
				'Breakfast Drink',
				'Breakfast Meat',
				'Eggs',
				'Granola',
				'Milk',
				'Yogurt',
				'Fruit',
				'SauceGravy',
				'Dessert',
				'Spice',
				'Drink',
				'Oats',
			];
		}

		getTotalCupsAmountForCategory(category) {
			return this.items.reduce((accumulator, item) => {
				if (item.category !== category) {
					return accumulator;
				}

				accumulator += (item.preparedserving * item.servings * item.quantity);
				return accumulator;
			}, 0);
		}
	}



		window.onload = async function () {
		
		const itemsResponse = await window.fetch('/rest/items');
		const items = await itemsResponse.json();
		const itemsInsightProcessor = new InsightProcessor(items);

		var chart = new CanvasJS.Chart("chartContainer", {
			animationEnabled: true,
			
			title:{
				text:"Visual Inventory"
			},
			axisX:{
				interval: 1
			},
			exportEnabled: true,
			axisY2:{
				interlacedColor: "rgba(1,77,101,.2)",
				gridColor: "rgba(1,77,101,.1)",
				title: "Contents Measured in Cups"
			},
			data: [{
				type: "column",
				name: "companies",
				axisYType: "secondary",
				color: "#24604b",
				dataPoints: itemsInsightProcessor.categories.map((category) => {
					return {
						y: itemsInsightProcessor.getTotalCupsAmountForCategory(category),
						label: category,
					}
				})
			}]
		});
		chart.render();

		}
div(id="chartContainer" style="height: 570px; width: 95%; margin: 0 auto;")
script(src="https://canvasjs.com/assets/script/canvasjs.min.js")
div.insightCont.smallSpaceAbove
	div.insightUnit
		img.insightImage(src='../img/pantry.png', title='An item is simply one unit of food, like a can of dried Beef.', alt='An item is simply one unit of food, like a can of dried Beef.')
		div#target.insightInfoRight
	//- div.insightUnit
	//-     div#target2.heading.insightInfo
	div.insightUnit.reverse
		div#target3.insightInfoLeft
		img.insightImage(src='../img/meal.png')
	div.insightUnit
		img.insightImage(src='../img/measure.png')
		div#target4.insightInfoRight

script.
	let allItemData = document.getElementById('data');
	let items = JSON.parse(allItemData.value);
	let target = document.getElementById('target');
	let quant = 0;
	for(i=0;i<items.length;i++) {
		quant += items[i].quantity;
	}


	target.innerHTML = 'There are <b>' + quant + '</b> items stored in the database.';
		let totalServ = 0;
		for(i=0;i<items.length;i++) {
			totalServ += (items[i].servings * items[i].quantity);
		};
	//- document.getElementById('target2').innerHTML = 'There are ' + totalServ + ' total servings'



			let renderedCups = 0;
		for(i=0;i<items.length;i++) {
			renderedCups += (items[i].servings * items[i].quantity * items[i].preparedserving);
		};
	document.getElementById('target3').innerHTML = 'There are <b>' + renderedCups + '</b> cups of prepared servings available. This means that if one were to prepare every meal/drink in the the drystore at once, this is how many cups of edible food and breakfast drink it would produce.'
	



	let averageCups = (renderedCups/quant);
	document.getElementById('target4').innerHTML = 'That\'s an average of  <b>' + Math.floor(averageCups) + '</b> cups per item.'